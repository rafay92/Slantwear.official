```jsx
import React, { useState, useEffect, createContext, useContext } from "react";
import { 
  Home, 
  Store, 
  Info, 
  Phone, 
  ShoppingCart, 
  User, 
  LogOut, 
  Moon, 
  Sun, 
  X, 
  Plus, 
  Trash2, 
  Edit, 
  Check, 
  AlertCircle, 
  TrendingUp, 
  Package 
} from "lucide-react";

// Context for theme and auth
const AppContext = createContext();

// Mock Data
const mockProducts = [
  {
    id: 1,
    name: "Slantwear Hoodie",
    price: 59.99,
    image: "https://placehold.co/300x400/f7fafc/64748b?text=Slantwear+Hoodie",
    description: "Premium hoodie with unique slant design. 100% organic cotton.",
    category: "Apparel"
  },
  {
    id: 2,
    name: "Graphic T-Shirt",
    price: 29.99,
    image: "https://placehold.co/300x400/f7fafc/64748b?text=Graphic+Tee",
    description: "Comfortable t-shirt with bold Slantwear logo design.",
    category: "Apparel"
  },
  {
    id: 3,
    name: "Casual Jacket",
    price: 89.99,
    image: "https://placehold.co/300x400/f7fafc/64748b?text=Casual+Jacket",
    description: "Stylish jacket perfect for everyday wear.",
    category: "Apparel"
  },
  {
    id: 4,
    name: "Slantwear Cap",
    price: 19.99,
    image: "https://placehold.co/300x400/f7fafc/64748b?text=Cap",
    description: "Adjustable cap with embroidered Slantwear logo.",
    category: "Accessories"
  }
];

const mockOrders = [
  {
    id: 1,
    customer: "John Doe",
    phone: "+1234567890",
    address: "123 Main St, New York, NY 10001",
    products: [mockProducts[0], mockProducts[1]],
    total: 89.98,
    date: "2024-01-15",
    status: "pending"
  }
];

const monthlySalesData = [
  { month: "Jan", sales: 1200 },
  { month: "Feb", sales: 1800 },
  { month: "Mar", sales: 2400 },
  { month: "Apr", sales: 1900 },
  { month: "May", sales: 2700 },
  { month: "Jun", sales: 3200 }
];

// Toast Component
const Toast = ({ message, type, onClose }) => {
  useEffect(() => {
    const timer = setTimeout(onClose, 3000);
    return () => clearTimeout(timer);
  }, [onClose]);

  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';

  return (
    <div className={`fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50 transform transition-all duration-300 flex items-center gap-2`}>
      {type === 'success' ? <Check size={20} /> : <AlertCircle size={20} />}
      <span>{message}</span>
      <button onClick={onClose} className="ml-2 hover:opacity-80">
        <X size={16} />
      </button>
    </div>
  );
};

// Main App Component
const App = () => {
  const [currentView, setCurrentView] = useState('home');
  const [cart, setCart] = useState([]);
  const [isCartOpen, setIsCartOpen] = useState(false);
  const [toast, setToast] = useState(null);
  const [theme, setTheme] = useState('light');
  const [adminLoggedIn, setAdminLoggedIn] = useState(false);
  const [orders, setOrders] = useState(mockOrders);
  const [products, setProducts] = useState(mockProducts);
  const [newProduct, setNewProduct] = useState({
    name: '',
    price: '',
    image: '',
    description: '',
    category: 'Apparel'
  });

  useEffect(() => {
    document.documentElement.classList.toggle('dark', theme === 'dark');
  }, [theme]);

  const showNotification = (message, type = 'success') => {
    setToast({ message, type });
  };

  const addToCart = (product) => {
    setCart(prev => {
      const existing = prev.find(item => item.id === product.id);
      if (existing) {
        return prev.map(item =>
          item.id === product.id
            ? { ...item, quantity: item.quantity + 1 }
            : item
        );
      }
      return [...prev, { ...product, quantity: 1 }];
    });
    showNotification(`${product.name} added to cart!`);
  };

  const removeFromCart = (productId) => {
    setCart(prev => prev.filter(item => item.id !== productId));
  };

  const updateQuantity = (productId, newQuantity) => {
    if (newQuantity === 0) {
      removeFromCart(productId);
      return;
    }
    setCart(prev =>
      prev.map(item =>
        item.id === productId ? { ...item, quantity: newQuantity } : item
      )
    );
  };

  const getTotalPrice = () => {
    return cart.reduce((total, item) => total + (item.price * item.quantity), 0).toFixed(2);
  };

  const handleCheckout = (formData) => {
    if (cart.length === 0) return;
    
    const order = {
      id: orders.length + 1,
      customer: formData.name,
      phone: formData.phone,
      address: formData.address,
      products: cart.map(item => ({
        id: item.id,
        name: item.name,
        price: item.price,
        quantity: item.quantity
      })),
      total: getTotalPrice(),
      date: new Date().toISOString().split('T')[0],
      status: 'pending'
    };

    setOrders(prev => [...prev, order]);
    setCart([]);
    setIsCartOpen(false);
    showNotification('Order placed! We will contact you soon.');
    
    // In a real app, this would send data to backend
    console.log('Order submitted:', order);
  };

  const handleAdminLogin = (email, password) => {
    if (email === 'admin@slantwear.com' && password === 'RafayXSaad123') {
      setAdminLoggedIn(true);
      showNotification('Logged in successfully!');
      setCurrentView('admin-dashboard');
    } else {
      showNotification('Invalid credentials', 'error');
    }
  };

  const handleAddProduct = () => {
    if (!newProduct.name || !newProduct.price || !newProduct.image) {
      showNotification('Please fill all required fields', 'error');
      return;
    }

    const product = {
      ...newProduct,
      id: products.length + 1,
      price: parseFloat(newProduct.price)
    };

    setProducts(prev => [...prev, product]);
    setNewProduct({
      name: '',
      price: '',
      image: '',
      description: '',
      category: 'Apparel'
    });
    showNotification('Product added successfully!');
  };

  const handleDeleteProduct = (productId) => {
    setProducts(prev => prev.filter(p => p.id !== productId));
    showNotification('Product deleted!');
  };

  const toggleTheme = () => {
    setTheme(prev => (prev === 'light' ? 'dark' : 'light'));
  };

  const contextValue = {
    addToCart,
    removeFromCart,
    updateQuantity,
    getTotalPrice,
    showNotification,
    theme,
    toggleTheme
  };

  return (
    <AppContext.Provider value={contextValue}>
      <div className={`min-h-screen transition-colors duration-300 ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'}`}>
        {/* Navbar */}
        <nav className={`fixed top-0 w-full z-40 transition-colors duration-300 ${theme === 'dark' ? 'bg-gray-800/90 backdrop-blur-sm border-gray-700' : 'bg-white/90 backdrop-blur-sm border-gray-200'} border-b`}>
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center h-16">
              <div className="flex items-center space-x-8">
                <div 
                  className="text-2xl font-bold cursor-pointer"
                  onClick={() => setCurrentView('home')}
                >
                  <span className="text-indigo-600 dark:text-indigo-400">Slant</span>wear
                </div>
                <div className="hidden md:flex space-x-6">
                  {['home', 'shop', 'about', 'contact'].map((page) => (
                    <button
                      key={page}
                      onClick={() => setCurrentView(page)}
                      className={`capitalize transition-colors duration-200 hover:text-indigo-600 dark:hover:text-indipo-400 ${
                        currentView === page 
                          ? 'text-indigo-600 dark:text-indigo-400 font-medium' 
                          : 'text-gray-600 dark:text-gray-300'
                      }`}
                    >
                      {page}
                    </button>
                  ))}
                </div>
              </div>

              <div className="flex items-center space-x-4">
                <button
                  onClick={toggleTheme}
                  className="p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
                >
                  {theme === 'dark' ? <Sun size={20} /> : <Moon size={20} />}
                </button>

                <button
                  onClick={() => setIsCartOpen(true)}
                  className="relative p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full transition-colors"
                >
                  <ShoppingCart size={20} />
                  {cart.length > 0 && (
                    <span className="absolute -top-1 -right-1 bg-indigo-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">
                      {cart.reduce((sum, item) => sum + item.quantity, 0)}
                    </span>
                  )}
                </button>

                {adminLoggedIn ? (
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => setCurrentView('admin-dashboard')}
                      className="text-sm px-3 py-1 rounded bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300"
                    >
                      Admin
                    </button>
                    <button
                      onClick={() => setAdminLoggedIn(false)}
                      className="p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full"
                    >
                      <LogOut size={20} />
                    </button>
                  </div>
                ) : (
                  <button
                    onClick={() => setCurrentView('admin-login')}
                    className="text-sm px-3 py-1 rounded bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
                  >
                    Admin
                  </button>
                )}
              </div>
            </div>
          </div>
        </nav>

        {/* Main Content */}
        <main className="pt-16">
          {/* Home View */}
          {currentView === 'home' && (
            <div className="min-h-screen">
              {/* Hero Section */}
              <section className={`py-20 px-4 sm:px-6 lg:px-8 ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'}`}>
                <div className="max-w-7xl mx-auto">
                  <div className="flex flex-col lg:flex-row items-center justify-between gap-12">
                    <div className="lg:w-1/2 space-y-6">
                      <h1 className="text-4xl md:text-6xl font-bold leading-tight">
                        <span className="text-indigo-600 dark:text-indigo-400">Slant</span>wear
                      </h1>
                      <p className="text-xl text-gray-600 dark:text-gray-300">
                        Redefining streetwear with bold designs and premium quality. 
                        Where style meets comfort.
                      </p>
                      <button
                        onClick={() => setCurrentView('shop')}
                        className="bg-indigo-600 hover:bg-indigo-700 text-white px-8 py-3 rounded-lg text-lg font-medium transition-colors duration-200 transform hover:scale-105"
                      >
                        Shop Now
                      </button>
                    </div>
                    <div className="lg:w-1/2">
                      <img 
                        src="https://placehold.co/600x400/f7fafc/64748b?text=Slantwear+Collection" 
                        alt="Slantwear Collection" 
                        className="rounded-2xl shadow-2xl"
                      />
                    </div>
                  </div>
                </div>
              </section>

              {/* Featured Products */}
              <section className="py-20 px-4 sm:px-6 lg:px-8">
                <div className="max-w-7xl mx-auto">
                  <div className="text-center mb-16">
                    <h2 className="text-3xl md:text-4xl font-bold mb-4">Featured Products</h2>
                    <p className="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
                      Discover our most popular items, crafted with attention to detail and premium materials.
                    </p>
                  </div>

                  <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
                    {mockProducts.slice(0, 4).map((product) => (
                      <div 
                        key={product.id}
                        className={`rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 ${
                          theme === 'dark' ? 'bg-gray-800' : 'bg-white'
                        }`}
                      >
                        <img 
                          src={product.image} 
                          alt={product.name}
                          className="w-full h-64 object-cover"
                        />
                        <div className="p-6">
                          <h3 className="text-xl font-semibold mb-2">{product.name}</h3>
                          <p className="text-gray-600 dark:text-gray-400 text-sm mb-4 line-clamp-2">
                            {product.description}
                          </p>
                          <div className="flex items-center justify-between">
                            <span className="text-2xl font-bold text-indigo-600 dark:text-indigo-400">
                              ${product.price}
                            </span>
                            <button
                              onClick={() => addToCart(product)}
                              className="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                            >
                              Add to Cart
                            </button>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>

                  <div className="text-center mt-12">
                    <button
                      onClick={() => setCurrentView('shop')}
                      className="bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 px-6 py-3 rounded-lg font-medium transition-colors"
                    >
                      View All Products
                    </button>
                  </div>
                </div>
              </section>
            </div>
          )}

          {/* Shop View */}
          {currentView === 'shop' && (
            <div className="py-20 px-4 sm:px-6 lg:px-8">
              <div className="max-w-7xl mx-auto">
                <div className="text-center mb-12">
                  <h1 className="text-4xl font-bold mb-4">Our Collection</h1>
                  <p className="text-gray-600 dark:text-gray-400">
                    Explore our full range of premium streetwear and accessories.
                  </p>
                </div>

                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
                  {products.map((product) => (
                    <div 
                      key={product.id}
                      className={`rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 ${
                        theme === 'dark' ? 'bg-gray-800' : 'bg-white'
                      }`}
                    >
                      <img 
                        src={product.image} 
                        alt={product.name}
                        className="w-full h-64 object-cover"
                      />
                      <div className="p-6">
                        <h3 className="text-xl font-semibold mb-2">{product.name}</h3>
                        <p className="text-gray-600 dark:text-gray-400 text-sm mb-4">
                          {product.description}
                        </p>
                        <div className="flex items-center justify-between">
                          <span className="text-2xl font-bold text-indigo-600 dark:text-indigo-400">
                            ${product.price}
                          </span>
                          <button
                            onClick={() => addToCart(product)}
                            className="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                          >
                            Add to Cart
                          </button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          )}

          {/* About View */}
          {currentView === 'about' && (
            <div className="py-20 px-4 sm:px-6 lg:px-8">
              <div className="max-w-4xl mx-auto">
                <div className="text-center mb-12">
                  <h1 className="text-4xl font-bold mb-6">About Slantwear</h1>
                  <div className="w-24 h-1 bg-indigo-600 mx-auto mb-8"></div>
                </div>

                <div className={`prose max-w-none ${theme === 'dark' ? 'prose-invert' : ''}`}>
                  <p className="text-xl text-gray-600 dark:text-gray-300 mb-6">
                    Founded in 2020, Slantwear has been at the forefront of innovative streetwear design, 
                    blending urban aesthetics with premium craftsmanship.
                  </p>

                  <p className="text-gray-600 dark:text-gray-300 mb-6">
                    Our mission is simple: to create clothing that not only looks exceptional but also 
                    stands the test of time. We source only the highest quality materials and work with 
                    skilled artisans to bring our designs to life.
                  </p>

                  <p className="text-gray-600 dark:text-gray-300 mb-6">
                    Every piece in our collection tells a story – of rebellion, of individuality, of the 
                    urban landscape that inspires us daily. From our signature slant designs to our 
                    attention to detail in every stitch, we pour our passion into every garment.
                  </p>

                  <p className="text-gray-600 dark:text-gray-300">
                    We believe fashion should be accessible without compromising on quality or ethics. 
                    That's why we maintain transparent supply chains and fair labor practices throughout 
                    our production process.
                  </p>
                </div>

                <div className="mt-16 grid grid-cols-1 md:grid-cols-3 gap-8">
                  <div className={`p-6 rounded-xl text-center ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow-lg`}>
                    <div className="text-4xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">10K+</div>
                    <div className="text-gray-600 dark:text-gray-400">Happy Customers</div>
                  </div>
                  <div className={`p-6 rounded-xl text-center ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow-lg`}>
                    <div className="text-4xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">50+</div>
                    <div className="text-gray-600 dark:text-gray-400">Designs</div>
                  </div>
                  <div className={`p-6 rounded-xl text-center ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow-lg`}>
                    <div className="text-4xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">4</div>
                    <div className="text-gray-600 dark:text-gray-400">Countries</div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Contact View */}
          {currentView === 'contact' && (
            <div className="py-20 px-4 sm:px-6 lg:px-8">
              <div className="max-w-4xl mx-auto">
                <div className="text-center mb-12">
                  <h1 className="text-4xl font-bold mb-6">Get In Touch</h1>
                  <p className="text-gray-600 dark:text-gray-400">
                    Have questions about our products or need assistance with your order? 
                    We're here to help.
                  </p>
                </div>

                <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
                  <div>
                    <h2 className="text-2xl font-semibold mb-6">Contact Information</h2>
                    <div className="space-y-4">
                      <div className={`p-4 rounded-lg ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                        <h3 className="font-semibold mb-2">Email</h3>
                        <p className="text-gray-600 dark:text-gray-400">support@slantwear.com</p>
                      </div>
                      <div className={`p-4 rounded-lg ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                        <h3 className="font-semibold mb-2">Phone</h3>
                        <p className="text-gray-600 dark:text-gray-400">+1 (555) 123-4567</p>
                      </div>
                      <div className={`p-4 rounded-lg ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                        <h3 className="font-semibold mb-2">Address</h3>
                        <p className="text-gray-600 dark:text-gray-400">
                          123 Fashion Street<br />
                          New York, NY 10001<br />
                          United States
                        </p>
                      </div>
                    </div>

                    <div className="mt-8">
                      <h3 className="text-xl font-semibold mb-4">Connect With Us</h3>
                      <a
                        href="https://wa.me/15551234567"
                        target="_blank"
                        rel="noopener noreferrer"
                        className="inline-flex items-center space-x-2 bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-lg font-medium transition-colors"
                      >
                        <Phone size={20} />
                        <span>Chat on WhatsApp</span>
                      </a>
                    </div>
                  </div>

                  <div>
                    <h2 className="text-2xl font-semibold mb-6">Send Us a Message</h2>
                    <form className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                      <div className="space-y-4">
                        <div>
                          <label className="block text-sm font-medium mb-2">Name</label>
                          <input
                            type="text"
                            className={`w-full px-4 py-2 rounded-lg border ${
                              theme === 'dark' 
                                ? 'bg-gray-700 border-gray-600 text-white' 
                                : 'bg-white border-gray-300'
                            } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            placeholder="Your name"
                          />
                        </div>
                        <div>
                          <label className="block text-sm font-medium mb-2">Email</label>
                          <input
                            type="email"
                            className={`w-full px-4 py-2 rounded-lg border ${
                              theme === 'dark' 
                                ? 'bg-gray-700 border-gray-600 text-white' 
                                : 'bg-white border-gray-300'
                            } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            placeholder="your.email@example.com"
                          />
                        </div>
                        <div>
                          <label className="block text-sm font-medium mb-2">Message</label>
                          <textarea
                            rows="5"
                            className={`w-full px-4 py-2 rounded-lg border ${
                              theme === 'dark' 
                                ? 'bg-gray-700 border-gray-600 text-white' 
                                : 'bg-white border-gray-300'
                            } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            placeholder="How can we help you?"
                          ></textarea>
                        </div>
                        <button
                          type="submit"
                          className="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg font-medium transition-colors"
                        >
                          Send Message
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Admin Login */}
          {currentView === 'admin-login' && (
            <div className="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
              <div className={`max-w-md w-full p-8 rounded-2xl shadow-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'}`}>
                <div className="text-center mb-8">
                  <h2 className="text-3xl font-bold">Admin Login</h2>
                  <p className="text-gray-600 dark:text-gray-400 mt-2">
                    Sign in to access the admin dashboard
                  </p>
                </div>

                <form onSubmit={(e) => {
                  e.preventDefault();
                  const formData = new FormData(e.target);
                  handleAdminLogin(formData.get('email'), formData.get('password'));
                }} className="space-y-6">
                  <div>
                    <label className="block text-sm font-medium mb-2">Email</label>
                    <input
                      type="email"
                      name="email"
                      required
                      className={`w-full px-4 py-2 rounded-lg border ${
                        theme === 'dark' 
                          ? 'bg-gray-700 border-gray-600 text-white' 
                          : 'bg-white border-gray-300'
                      } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                      placeholder="admin@slantwear.com"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium mb-2">Password</label>
                    <input
                      type="password"
                      name="password"
                      required
                      className={`w-full px-4 py-2 rounded-lg border ${
                        theme === 'dark' 
                          ? 'bg-gray-700 border-gray-600 text-white' 
                          : 'bg-white border-gray-300'
                      } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                      placeholder="Enter password"
                    />
                  </div>
                  <button
                    type="submit"
                    className="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg font-medium transition-colors"
                  >
                    Sign In
                  </button>
                </form>

                <div className="mt-6 text-center">
                  <button
                    onClick={() => showNotification('Password reset email sent!')}
                    className="text-sm text-indigo-600 dark:text-indigo-400 hover:underline"
                  >
                    Forgot password?
                  </button>
                </div>
              </div>
            </div>
          )}

          {/* Admin Dashboard */}
          {currentView === 'admin-dashboard' && adminLoggedIn && (
            <div className="min-h-screen">
              <div className="flex">
                {/* Sidebar */}
                <aside className={`w-64 min-h-screen p-6 ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} border-r ${theme === 'dark' ? 'border-gray-700' : 'border-gray-200'}`}>
                  <div className="mb-8">
                    <h2 className="text-2xl font-bold">
                      <span className="text-indigo-600 dark:text-indigo-400">Slant</span>wear
                    </h2>
                    <p className="text-sm text-gray-500 dark:text-gray-400">Admin Dashboard</p>
                  </div>
                  
                  <nav className="space-y-2">
                    <button
                      onClick={() => setCurrentView('admin-products')}
                      className="w-full text-left px-4 py-3 rounded-lg flex items-center space-x-3 transition-colors hover:bg-indigo-50 dark:hover:bg-indigo-900/30"
                    >
                      <Package size={20} />
                      <span>Products</span>
                    </button>
                    <button
                      onClick={() => setCurrentView('admin-orders')}
                      className="w-full text-left px-4 py-3 rounded-lg flex items-center space-x-3 transition-colors hover:bg-indigo-50 dark:hover:bg-indigo-900/30"
                    >
                      <ShoppingCart size={20} />
                      <span>Orders</span>
                    </button>
                    <button
                      onClick={() => setCurrentView('admin-sales')}
                      className="w-full text-left px-4 py-3 rounded-lg flex items-center space-x-3 transition-colors hover:bg-indigo-50 dark:hover:bg-indigo-900/30"
                    >
                      <TrendingUp size={20} />
                      <span>Sales Tracker</span>
                    </button>
                  </nav>
                </aside>

                {/* Main Content */}
                <main className="flex-1 p-8">
                  {/* Admin Products */}
                  {currentView === 'admin-products' && (
                    <div>
                      <div className="flex justify-between items-center mb-8">
                        <h1 className="text-3xl font-bold">Product Management</h1>
                        <button
                          onClick={() => setCurrentView('admin-add-product')}
                          className="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg font-medium transition-colors flex items-center space-x-2"
                        >
                          <Plus size={20} />
                          <span>Add Product</span>
                        </button>
                      </div>

                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        {products.map((product) => (
                          <div 
                            key={product.id}
                            className={`rounded-xl overflow-hidden shadow-lg ${
                              theme === 'dark' ? 'bg-gray-800' : 'bg-white'
                            }`}
                          >
                            <img 
                              src={product.image} 
                              alt={product.name}
                              className="w-full h-48 object-cover"
                            />
                            <div className="p-6">
                              <h3 className="text-xl font-semibold mb-2">{product.name}</h3>
                              <p className="text-gray-600 dark:text-gray-400 text-sm mb-4">
                                ${product.price} • {product.category}
                              </p>
                              <div className="flex space-x-2">
                                <button
                                  onClick={() => {
                                    setNewProduct(product);
                                    setCurrentView('admin-edit-product');
                                  }}
                                  className="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg text-sm font-medium transition-colors flex items-center justify-center space-x-1"
                                >
                                  <Edit size={16} />
                                  <span>Edit</span>
                                </button>
                                <button
                                  onClick={() => handleDeleteProduct(product.id)}
                                  className="flex-1 bg-red-600 hover:bg-red-700 text-white py-2 rounded-lg text-sm font-medium transition-colors flex items-center justify-center space-x-1"
                                >
                                  <Trash2 size={16} />
                                  <span>Delete</span>
                                </button>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}

                  {/* Admin Orders */}
                  {currentView === 'admin-orders' && (
                    <div>
                      <h1 className="text-3xl font-bold mb-8">Orders Management</h1>
                      
                      <div className="overflow-x-auto">
                        <table className={`min-w-full divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-200'}`}>
                          <thead>
                            <tr>
                              <th className="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Order #</th>
                              <th className="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Customer</th>
                              <th className="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Total</th>
                              <th className="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Date</th>
                              <th className="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Status</th>
                            </tr>
                          </thead>
                          <tbody className={`divide-y ${theme === 'dark' ? 'divide-gray-700' : 'divide-gray-200'}`}>
                            {orders.map((order) => (
                              <tr key={order.id}>
                                <td className="px-6 py-4 whitespace-nowrap">#{order.id}</td>
                                <td className="px-6 py-4">
                                  <div>
                                    <div className="font-medium">{order.customer}</div>
                                    <div className="text-sm text-gray-500 dark:text-gray-400">{order.phone}</div>
                                  </div>
                                </td>
                                <td className="px-6 py-4">${order.total}</td>
                                <td className="px-6 py-4">{order.date}</td>
                                <td className="px-6 py-4">
                                  <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                    order.status === 'pending' 
                                      ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300' 
                                      : 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300'
                                  }`}>
                                    {order.status}
                                  </span>
                                </td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      </div>
                    </div>
                  )}

                  {/* Admin Sales */}
                  {currentView === 'admin-sales' && (
                    <div>
                      <h1 className="text-3xl font-bold mb-8">Sales Tracker</h1>
                      
                      <div className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                        <h2 className="text-xl font-semibold mb-6">Monthly Sales</h2>
                        <div className="h-64 flex items-end space-x-2">
                          {monthlySalesData.map((data, index) => (
                            <div key={index} className="flex-1 flex flex-col items-center">
                              <div 
                                className="w-full bg-indigo-600 rounded-t transition-all duration-500 hover:bg-indigo-700"
                                style={{ height: `${(data.sales / 3500) * 100}%` }}
                              ></div>
                              <span className="text-sm mt-2 text-gray-600 dark:text-gray-400">{data.month}</span>
                              <span className="text-sm font-medium">${data.sales}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      <div className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-6">
                        <div className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow text-center`}>
                          <div className="text-3xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">
                            ${monthlySalesData.reduce((sum, item) => sum + item.sales, 0)}
                          </div>
                          <div className="text-gray-600 dark:text-gray-400">Total Sales</div>
                        </div>
                        <div className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow text-center`}>
                          <div className="text-3xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">
                            {orders.length}
                          </div>
                          <div className="text-gray-600 dark:text-gray-400">Total Orders</div>
                        </div>
                        <div className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow text-center`}>
                          <div className="text-3xl font-bold text-indigo-600 dark:text-indigo-400 mb-2">
                            ${getTotalPrice()}
                          </div>
                          <div className="text-gray-600 dark:text-gray-400">Pending Orders</div>
                        </div>
                      </div>
                    </div>
                  )}

                  {/* Add Product Form */}
                  {currentView === 'admin-add-product' && (
                    <div>
                      <div className="flex justify-between items-center mb-8">
                        <h1 className="text-3xl font-bold">Add New Product</h1>
                        <button
                          onClick={() => setCurrentView('admin-products')}
                          className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200"
                        >
                          <X size={24} />
                        </button>
                      </div>

                      <div className={`max-w-2xl p-8 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                        <form onSubmit={(e) => {
                          e.preventDefault();
                          handleAddProduct();
                          setCurrentView('admin-products');
                        }} className="space-y-6">
                          <div>
                            <label className="block text-sm font-medium mb-2">Product Name</label>
                            <input
                              type="text"
                              value={newProduct.name}
                              onChange={(e) => setNewProduct({...newProduct, name: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Price ($)</label>
                            <input
                              type="number"
                              step="0.01"
                              value={newProduct.price}
                              onChange={(e) => setNewProduct({...newProduct, price: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Image URL</label>
                            <input
                              type="url"
                              value={newProduct.image}
                              onChange={(e) => setNewProduct({...newProduct, image: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                              placeholder="https://example.com/image.jpg"
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Category</label>
                            <select
                              value={newProduct.category}
                              onChange={(e) => setNewProduct({...newProduct, category: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            >
                              <option value="Apparel">Apparel</option>
                              <option value="Accessories">Accessories</option>
                              <option value="Footwear">Footwear</option>
                            </select>
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Description</label>
                            <textarea
                              value={newProduct.description}
                              onChange={(e) => setNewProduct({...newProduct, description: e.target.value})}
                              rows="4"
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            ></textarea>
                          </div>
                          <div className="flex space-x-4">
                            <button
                              type="submit"
                              className="flex-1 bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg font-medium transition-colors"
                            >
                              Add Product
                            </button>
                            <button
                              type="button"
                              onClick={() => setCurrentView('admin-products')}
                              className={`flex-1 py-3 rounded-lg font-medium transition-colors ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 hover:bg-gray-600 text-white' 
                                  : 'bg-gray-200 hover:bg-gray-300 text-gray-800'
                              }`}
                            >
                              Cancel
                            </button>
                          </div>
                        </form>
                      </div>
                    </div>
                  )}

                  {/* Edit Product Form */}
                  {currentView === 'admin-edit-product' && (
                    <div>
                      <div className="flex justify-between items-center mb-8">
                        <h1 className="text-3xl font-bold">Edit Product</h1>
                        <button
                          onClick={() => setCurrentView('admin-products')}
                          className="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200"
                        >
                          <X size={24} />
                        </button>
                      </div>

                      <div className={`max-w-2xl p-8 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                        <form onSubmit={(e) => {
                          e.preventDefault();
                          // In a real app, this would update the product
                          showNotification('Product updated successfully!');
                          setCurrentView('admin-products');
                        }} className="space-y-6">
                          <div>
                            <label className="block text-sm font-medium mb-2">Product Name</label>
                            <input
                              type="text"
                              value={newProduct.name}
                              onChange={(e) => setNewProduct({...newProduct, name: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Price ($)</label>
                            <input
                              type="number"
                              step="0.01"
                              value={newProduct.price}
                              onChange={(e) => setNewProduct({...newProduct, price: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Image URL</label>
                            <input
                              type="url"
                              value={newProduct.image}
                              onChange={(e) => setNewProduct({...newProduct, image: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                              placeholder="https://example.com/image.jpg"
                              required
                            />
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Category</label>
                            <select
                              value={newProduct.category}
                              onChange={(e) => setNewProduct({...newProduct, category: e.target.value})}
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            >
                              <option value="Apparel">Apparel</option>
                              <option value="Accessories">Accessories</option>
                              <option value="Footwear">Footwear</option>
                            </select>
                          </div>
                          <div>
                            <label className="block text-sm font-medium mb-2">Description</label>
                            <textarea
                              value={newProduct.description}
                              onChange={(e) => setNewProduct({...newProduct, description: e.target.value})}
                              rows="4"
                              className={`w-full px-4 py-2 rounded-lg border ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 border-gray-600 text-white' 
                                  : 'bg-white border-gray-300'
                              } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                            ></textarea>
                          </div>
                          <div className="flex space-x-4">
                            <button
                              type="submit"
                              className="flex-1 bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg font-medium transition-colors"
                            >
                              Save Changes
                            </button>
                            <button
                              type="button"
                              onClick={() => setCurrentView('admin-products')}
                              className={`flex-1 py-3 rounded-lg font-medium transition-colors ${
                                theme === 'dark' 
                                  ? 'bg-gray-700 hover:bg-gray-600 text-white' 
                                  : 'bg-gray-200 hover:bg-gray-300 text-gray-800'
                              }`}
                            >
                              Cancel
                            </button>
                          </div>
                        </form>
                      </div>
                    </div>
                  )}
                </main>
              </div>
            </div>
          )}
        </main>

        {/* Cart Sidebar */}
        {isCartOpen && (
          <div className="fixed inset-0 z-50 overflow-hidden">
            <div className="absolute inset-0 bg-black bg-opacity-50" onClick={() => setIsCartOpen(false)}></div>
            <div className={`absolute right-0 top-0 h-full w-full max-w-md ${theme === 'dark' ? 'bg-gray-900' : 'bg-white'} shadow-xl transform transition-transform duration-300`}>
              <div className="flex flex-col h-full">
                <div className={`p-6 border-b ${theme === 'dark' ? 'border-gray-700' : 'border-gray-200'} flex items-center justify-between`}>
                  <h2 className="text-xl font-semibold">Shopping Cart</h2>
                  <button 
                    onClick={() => setIsCartOpen(false)}
                    className="p-2 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-full"
                  >
                    <X size={20} />
                  </button>
                </div>

                <div className="flex-1 overflow-y-auto p-6">
                  {cart.length === 0 ? (
                    <div className="text-center py-12">
                      <ShoppingCart size={48} className="mx-auto text-gray-400 mb-4" />
                      <p className="text-gray-500 dark:text-gray-400">Your cart is empty</p>
                    </div>
                  ) : (
                    <div className="space-y-4">
                      {cart.map((item) => (
                        <div 
                          key={item.id} 
                          className={`flex items-center space-x-4 p-4 rounded-lg ${
                            theme === 'dark' ? 'bg-gray-800' : 'bg-gray-50'
                          }`}
                        >
                          <img 
                            src={item.image} 
                            alt={item.name} 
                            className="w-16 h-16 object-cover rounded"
                          />
                          <div className="flex-1">
                            <h3 className="font-medium">{item.name}</h3>
                            <p className="text-indigo-600 dark:text-indigo-400">${item.price}</p>
                          </div>
                          <div className="flex items-center space-x-2">
                            <button
                              onClick={() => updateQuantity(item.id, item.quantity - 1)}
                              className="w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center hover:bg-gray-300 dark:hover:bg-gray-600"
                            >
                              -
                            </button>
                            <span className="w-8 text-center">{item.quantity}</span>
                            <button
                              onClick={() => updateQuantity(item.id, item.quantity + 1)}
                              className="w-8 h-8 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center hover:bg-gray-300 dark:hover:bg-gray-600"
                            >
                              +
                            </button>
                          </div>
                          <button
                            onClick={() => removeFromCart(item.id)}
                            className="text-red-500 hover:text-red-700"
                          >
                            <X size={20} />
                          </button>
                        </div>
                      ))}
                    </div>
                  )}
                </div>

                {cart.length > 0 && (
                  <div className={`p-6 border-t ${theme === 'dark' ? 'border-gray-700' : 'border-gray-200'}`}>
                    <div className="flex justify-between items-center mb-4">
                      <span className="text-lg font-semibold">Total:</span>
                      <span className="text-2xl font-bold text-indigo-600 dark:text-indigo-400">
                        ${getTotalPrice()}
                      </span>
                    </div>
                    <button
                      onClick={() => setCurrentView('checkout')}
                      className="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg font-medium transition-colors"
                    >
                      Proceed to Checkout
                    </button>
                  </div>
                )}
              </div>
            </div>
          </div>
        )}

        {/* Checkout View */}
        {currentView === 'checkout' && (
          <div className="min-h-screen py-20 px-4 sm:px-6 lg:px-8">
            <div className="max-w-4xl mx-auto">
              <div className="text-center mb-12">
                <h1 className="text-3xl font-bold mb-4">Checkout</h1>
                <p className="text-gray-600 dark:text-gray-400">
                  Complete your order with Cash on Delivery
                </p>
              </div>

              <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
                <div>
                  <h2 className="text-2xl font-semibold mb-6">Customer Information</h2>
                  <form 
                    onSubmit={(e) => {
                      e.preventDefault();
                      const formData = new FormData(e.target);
                      const data = {
                        name: formData.get('name'),
                        phone: formData.get('phone'),
                        address: formData.get('address')
                      };
                      handleCheckout(data);
                      setCurrentView('home');
                    }}
                    className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}
                  >
                    <div className="space-y-4">
                      <div>
                        <label className="block text-sm font-medium mb-2">Full Name</label>
                        <input
                          type="text"
                          name="name"
                          required
                          className={`w-full px-4 py-2 rounded-lg border ${
                            theme === 'dark' 
                              ? 'bg-gray-700 border-gray-600 text-white' 
                              : 'bg-white border-gray-300'
                          } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                          placeholder="John Doe"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium mb-2">Phone Number</label>
                        <input
                          type="tel"
                          name="phone"
                          required
                          className={`w-full px-4 py-2 rounded-lg border ${
                            theme === 'dark' 
                              ? 'bg-gray-700 border-gray-600 text-white' 
                              : 'bg-white border-gray-300'
                          } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                          placeholder="+1 (555) 123-4567"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium mb-2">Delivery Address</label>
                        <textarea
                          name="address"
                          required
                          rows="4"
                          className={`w-full px-4 py-2 rounded-lg border ${
                            theme === 'dark' 
                              ? 'bg-gray-700 border-gray-600 text-white' 
                              : 'bg-white border-gray-300'
                          } focus:ring-2 focus:ring-indigo-500 focus:border-transparent`}
                          placeholder="123 Main Street, Apt 4B, New York, NY 10001"
                        ></textarea>
                      </div>
                      <div className="bg-yellow-50 dark:bg-yellow-900/20 p-4 rounded-lg">
                        <div className="flex items-start">
                          <AlertCircle size={20} className="text-yellow-600 dark:text-yellow-400 mt-0.5 mr-2 flex-shrink-0" />
                          <div>
                            <h4 className="font-medium text-yellow-800 dark:text-yellow-300">Cash on Delivery</h4>
                            <p className="text-sm text-yellow-700 dark:text-yellow-400">
                              Pay in cash when your order is delivered. No online payment required.
                            </p>
                          </div>
                        </div>
                      </div>
                      <button
                        type="submit"
                        className="w-full bg-indigo-600 hover:bg-indigo-700 text-white py-3 rounded-lg font-medium transition-colors"
                      >
                        Place Order
                      </button>
                    </div>
                  </form>
                </div>

                <div>
                  <h2 className="text-2xl font-semibold mb-6">Order Summary</h2>
                  <div className={`p-6 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} shadow`}>
                    <div className="space-y-4 mb-6">
                      {cart.map((item) => (
                        <div key={item.id} className="flex justify-between items-center">
                          <div className="flex items-center space-x-3">
                            <img 
                              src={item.image} 
                              alt={item.name} 
                              className="w-12 h-12 object-cover rounded"
                            />
                            <div>
                              <p className="font-medium">{item.name}</p>
                              <p className="text-sm text-gray-500 dark:text-gray-400">
                                {item.quantity} × ${item.price}
                              </p>
                            </div>
                          </div>
                          <p className="font-medium">${(item.price * item.quantity).toFixed(2)}</p>
                        </div>
                      ))}
                    </div>
                    <div className="border-t pt-4">
                      <div className="flex justify-between items-center text-xl font-bold">
                        <span>Total:</span>
                        <span className="text-indigo-600 dark:text-indigo-400">${getTotalPrice()}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Footer */}
        <footer className={`py-12 px-4 sm:px-6 lg:px-8 ${theme === 'dark' ? 'bg-gray-800' : 'bg-gray-100'}`}>
          <div className="max-w-7xl mx-auto">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
              <div className="md:col-span-2">
                <h3 className="text-2xl font-bold mb-4">
                  <span className="text-indigo-600 dark:text-indigo-400">Slant</span>wear
                </h3>
                <p className="text-gray-600 dark:text-gray-400 mb-4">
                  Redefining streetwear with bold designs and premium quality. 
                  Where style meets comfort.
                </p>
                <div className="flex space-x-4">
                  <a href="#" className="text-gray-500 hover:text-indigo-600 dark:hover:text-indigo-400">
                    <span className="sr-only">Facebook</span>
                  </a>
                  <a href="#" className="text-gray-500 hover:text-indigo-600 dark:hover:text-indigo-400">
                    <span className="sr-only">Instagram</span>
                  </a>
                  <a href="#" className="text-gray-500 hover:text-indigo-600 dark:hover:text-indigo-400">
                    <span className="sr-only">Twitter</span>
                  </a>
                </div>
              </div>
              
              <div>
                <h4 className="font-semibold mb-4">Shop</h4>
                <ul className="space-y-2">
                  <li><button onClick={() => setCurrentView('shop')} className="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400">All Products</button></li>
                  <li><button onClick={() => setCurrentView('shop')} className="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400">Apparel</button></li>
                  <li><button onClick={() => setCurrentView('shop')} className="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400">Accessories</button></li>
                </ul>
              </div>
              
              <div>
                <h4 className="font-semibold mb-4">Support</h4>
                <ul className="space-y-2">
                  <li><button onClick={() => setCurrentView('about')} className="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400">About Us</button></li>
                  <li><button onClick={() => setCurrentView('contact')} className="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400">Contact</button></li>
                  <li><a href="#" className="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400">FAQ</a></li>
                </ul>
              </div>
            </div>
            
            <div className="border-t mt-8 pt-8 text-center text-gray-500 dark:text-gray-400 text-sm">
              <p>&copy; 2024 Slantwear. All rights reserved.</p>
            </div>
          </div>
        </footer>

        {/* Toast Notification */}
        {toast && (
          <Toast 
            message={toast.message} 
            type={toast.type} 
            onClose={() => setToast(null)} 
          />
        )}
      </div>
    </AppContext.Provider>
  );
};

export default App;
```
